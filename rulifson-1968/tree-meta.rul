.META PROGRAM  % TREE 1.3 %

PROGRAM = (".META" .ID ?1? (".LIST" :LIST[0] / .EMPTY :MT[0]) SIZE :BEGIN[3]
          / ".CONTINUE" :MT[0])
          <"TREE 1.3"> :SETUP[1] * $( RULE * )
          ".END" ?2E :ENDN[0] * <"DONE"> ;
SIZE = '( SIZ $(', SIZ :DO[2]) ') ?50E / .EMPTY :MT[0] ;
SIZ = .CHR '= ?54E .NUM ?55E :SIZS[2] ;

RULE = .ID ('= EXP ?3E ('% :KPOPK[1] / .EMPTY) :OUTPT[2] /
       '/ "=>" ?3E GEN1 :SIMP[2] /
       OUTRUL :OUTPT[2]) ?5E '; ?6E ;

EXP = "<-" SUBACK ?7E ('/ EXP ?8E :BALTER[2] / .EMPTY :BALTER[1]) /
      SUBEXP ('/ EXP ?9E :ALTER[2] / .EMPTY) ;

SUBACK  =  NTEST (SUBACK :DO[2] / .EMPTY) /
           STEST (SUBACK :CONCAT[2] / .EMPTY) ;

SUBEXP = (NTEST / STEST) (NOBACK :CONCAT[2] / .EMPTY) ;

NOBACK = (NTEST / STEST ('? .NUM ?10E :LOAD[1] (.ID / '? :ZRO[0]) ?11E :ERCOD[3] /
                         .EMPTY :ER[1]) )
         (NOBACK :DO[2] / .EMPTY) ;

NTEST = ': .ID ?12E :NDLB[1] /
        '[ (.NUM '] ?14E :MKNODE[1] /
            GENP '] ?52E (': / .EMPTY :OUTCH[0] :DO[2]) ) /
        '< GENP '> ?53E (': / .EMPTY :OUTCH[0] :DO[2]) :TTY[1] /
        (".CHR" :GCHR / '* :GO) [0] /
        "=>" STEST ?15E :SCAN[1] /
        COMM ;

GENP = GENP1 / .EMPTY :MT[0] ;
       
GENP1 = GENP2 (GENP1 :DO[2] / .EMPTY) ;

GENP2 = '* ('S .NUM ?51E :PAROUT[1] / .EMPTY :ZRO[0] :PAROUT[1])
           ('L :OL / 'C :OC / 'N :ON / .EMPTY :OS) [0] :NOPT[2] /
        GENU ;

COMM = ".EMPTY" :SET[0] /
       '! .SR ?18E :IMED[1] ;

STEST = '. .ID ?19E :PRIM[1] /
        .ID :CALL[1] /
        .SR :STST[1] /
        '( EXP ?20E ') ?21E /
        '' .CHR :CTST[1] /
        (.NUM '$ ?23E / '$ :ZRO[0]) (.NUM / .EMPTY :MT[0]) STEST ?20E :ARB[3] /
        '- (.SR :NSR[1] / '' .CHR :NCHR[1]) ?26E :NTST[1] ;

OUTRUL = '[ OUTR ?27E (OUTRUL :ALTER[2] / .EMPTY) :OSET[1] ;
OUTR = OUTEST "=>" ?29E OUTEXP ?30E :CONCAT[2] ;
OUTEST = (('] :MT / "-]" :ONE / "-,-]" :TWO / "-,-,-]" :THRE) [0] /
          ITEMS ']) :CNTCK[1] ;

ITEMS = ITEM (', ITEMS ?32E :ITMSTR[2] / .EMPTY :LITEM[1]) ;
ITEM = '- :MT[0] /
       .ID '[ ?33E OUTEST ?34E :RITEM[2] /
       NSIMP1 :NITEM[1] /
       '. .ID ?35E :FITEM[1] /
       .SR :TTST[1] /
       '' .CHR :CHTST[1] /
       '# .NUM  ?37E :GNITEM[1] ;

OUTEXP = SUBOUT ('/ OUTEXP :ALTER[2] / .EMPTY) ;
SUBOUT = OUTT (REST :CONCAT[2] / .EMPTY) / REST ;

REST = OUTT (REST :OER[2] / .EMPTY) / GEN (REST :DO[2] / .EMPTY) ;
OUTT = .ID '[ ?39E ARGLST '] ?40E :OUTCLL[2] / '( OUTEXP ') ?41E /
        NSIMP1 (': ('S :OS / 'L :OL / 'N :ON / 'C :OC) [0] :NOPT[2] /
        .EMPTY :DOIT[1]) ;

ARGLST = ARGMNT :ARG[1] (', ARGLST :DO[2] / .EMPTY) / .EMPTY :MT[0] ;
ARGMNT = NSIMP :ARGLD[1] / '# .NUM :GENARG[1] ;

NSIMP1 = <- '^ NSIMP :UP[2] / NSIMP :LKT[1] ;

NSIMP = '* .NUM ( <- ': NSIMP :CHASE[2] / .EMPTY :LCHASE[1]) ;

GEN1 = (OUT/COMM) (GEN1 :DO[2] / .EMPTY) ;

GEN =  COMM / GENU  / '< :TTY[0] / '> :FIL[0] ;

GENU = OUT /
       '. .ID ?42E '[ ?43E ((.ID / .NUM) :LOAD[1] :CALL[2] /
                            .EMPTY :CALL[1]) '] /
       '# .NUM :GNLBL[1] (': :DEF[1] / .EMPTY) ;

OUT = ('\ :OUTCR / ', :OUTAB) [0] /
       .SR :OUTSR[1] /
       '' .CHR :OUTCH[1] /
       "+W" :UPWRK[0] :OUTWRK[1] /
       "-W" :DNWRK[0] /
       ".W" :MT[0] :OUTWRK[1] /
       "^W" :MAXWRK[0] ;

E  =  .EMPTY RESET => '; $(RULE *) ".END" ?99E FINISH ;

SETUP [-] => ,"NOLIST NUL,EXT;GEN OPD 101B5,1,1;BF OPD 102B5,1,1" \
              "BT OPD 103B5,1,1;PSHN OPD 104B5,1,1;PSHK OPD 105B5,1,1" \
              "MKND OPD 106B5,1,1;NDLBL OPD 107B5,1,1;GET OPD 110B5,1,1" \
              "BPTR OPD 111B5,1,1;BNPTR OPD 112B5,1,1;RI1 OPD 113B5,1,1" \
              "RI2 OPD 114B5,2;FLGT OPD 115B5,1,1;BE OPD 116B5,1,1" \
              "LAB OPD 117B5,1,1;CE OPD 120B5,1,1;LDKA OPD 121B5,1,1" \
    "$KSTKSZ EQU 100;$MSTKSZ EQU 130;$NSTKSZ EQU 1300;$SSTKSZ EQU 1400" \ *1 ;

BEGIN [-,-,-] => "$START BRM INITL; CLA; STA WRK; STA XWRK" \
                 *3 *2 , "BRM RLINE; BRM " *1 "; BRM FINISH" \ ;

LIST / => " CLA; STA LISTFG;" ;

OUTPT [-,-] => *1:S , "ZRO; LDA *-1; BRM CLLO" \ *2 , "BRU RTNO" \ ;

SIMP [-,-] => *1 , "ZRO" \ *2 , "BRR " *1 \ ;

BALTER [-] => , "BRM SAV" \ *1 , "BRM RSTR" \
     [-,-] => , "BRM SAV" \ *2 , "BRM RSTR; BT " #1 \ *2 #1 D[] ;

D / => , "EQU *" \ ;

ALTER [-,SET[]] => *1 *2
[CONCAT[-,-],-] => PMT[*1:*1,#1] *1:*2 , "BRU " #2 \ #1 D[] *2 #2 D[] \
          [-,-] => *1 , "BT " #1 \ *2 #1 D[] ;

PMT [PRIM[-],#1] => , "BRM " *1:*1:S "; BF " #1 "; MRG " *1:*1:S "FLG; PSHK =0" \
           [-,-] => *2 , "BF " #1 \ ;

ER [ALTER[-,SET[]]] => *1
                [-] => *1 , "BE =-1" \ ;

DO [-,-] => *1 *2 ;

CONCAT [-,-] => *1 , "BF " #1 \ *2 #1 D[] ;

LOAD [.NUM] => , "LDA =" *1:S \
      [.ID] => , "LDA " *1:S \ ;

CALL [-] => , "BRM " *1 \
   [-,-] => *2 , "BRM " *1 \ ;

MT / => .EMPTY ;

CLA / => "CLA" ;

ZRO / => "0" ;

ERCOD [-,-,-] => *1 *2 , "BE " *3 \ ;

NDLB [-] => , "NDLBL =" *1 \ ;

MKNODE [-] => , "MKND =" *1 \ ;

ARB [ZRO[],MT[],-] => #1 D[] *3 , "BT " #1 "; MIN MFLAG" \
     [.NUM,MT[],-] => ARB1[*1] #1 D[] *3
                      , "SKR* MSP; BT " #1 "; SKN* MSP; BRU *+3; BT " #1 "; MIN MFLAG" \ ARB3[]
        [-,.NUM,-] => ARB1[*2] #1 D[] *3
                      , "SKR* MSP; BT " #1 "; SKN* MSP" \ ARB2[*1,*2] ;

ARB1 [-] => , "BRM SAV; LDA =" *1:S "+1; MIN MSP; STA* MSP" \ ;

ARB2 [-,.NUM] => , "BRM *+4; CLA; STA MFLAG; BRU *+4; LDA* MSP; SKG =" *2 "-" *1
                 "; MIN MFLAG" \ ARB3[]
          [-] => , "BRU *+3; CLA; STA MFLAG" \ ARB3[] ;

ARB3 / => , "LDA =-1; ADM MSP; BRM RSTR" \ ;

GCHR / => , "BRM WPREP; BRM INC; LDA* IWP; MRG CHRFLG; MIN NCCP; PSHK =0" \ ;

GO / => "BBM OUTREE; BT *+3; LDA =2; BRM CERR" \ ;

SET / => , "LDA =1; STA MFLAG" \ ;

TTY [-] => TTY[] *1 FIL[]
     [] => , "LDA =1; STA FNUMO" \ XCHCH[] ;

FIL [] => , "LDA XFNUMO; STA FNUMO" \ ;

XCHCH / => , "LDA TCHNO; XMA CHNO; STA TCHNO" \ ;
STRING [-] => " DATA " *1 :L "; ASC " '' *1 '' \ ;

OSET [-] => , "BRM BEGN" \ *1 ;

CNTCK [-] => *1 , "CLB; SKE NCNT; STB MFLAG" \ ;

ONE / => , "LDA =1" \ ;
TWO / => , "LDA =2" \ ;
THRE / => , "LDA =3" \ ;

ITMSTR [-,-] => *1 , "MIN CNT; EAX - 1,2" \ *2 ;

LITEM [-] => *1 , "MIN CNT; LDA CNT" \ ;
RITEM [-,-] => , "RI1 =" *1 "; BRU " #1 \ *2 , "RI2" \ #1 D[] ;

OER [-,-] => *1 , "CE =1" \ *2 ;

OUTCLL [-,-] => , "LDA NSP; STA SNSP; NDLBL =" *1 "; CLA; STA CNT" \
                , "LDA KT; STA ME" \ *2
                , "MKND CNT; PSHN SNSP; LDX KT; BRM* 0,2; BRM POPK" \
                , "LDA* NSP; STA NSP" \ ;

ARGLD [-] => , "LDA ME" \ *1 ;

ARG [-] => *1 , "PSHK  =0; MIN CNT" \ ;

CHASE [-,-] => , "GET =" *1 "; BPTR *+3; LDA =3; BRM CERR" \ *2 ;

LCHASE [-] => , "GET =" *1 \ ;

DOIT [-]  => *1 ,"EBPTR " #1 "; CAX; PSHK =0; BRM* 0,2; BRM POPK; BRU *+2" \
             #1 D[] , "BRM OUTS" \ ;

NOPT [-,-] => *1 ,"BNPTR *+3; LDA =4; BRM " #1 \ ;

SCAN [-] => #1 D[] *1 ,"BT *+3; MIN NCCP; BRU " #1 \ ;

PRIM [-] => , "BRM " *1 "; BF *+3; MRG " *1 "FLG; PSHK =0" \ ;

STST [-] => , "BRM TST;" STRING[*1] ;
CTST [-] => , "LDA =" *1:N "; BRM TCH" \ ;

OS / => " BRM OUTS" \ ;
ON / => " ETR =77777B; BRM OUTN" \ ;
OL / => " CAX; LDA 0,2; BRM DUTN" \ ;
OC / => " ETR =377B,; CIO FNUMO; MIN CHNO" \ ;

GNLBL [-] => , "GEN GNLB" *1 \ ;
DEF [-] => *1 , "BRM LIT; DATA 6; ASC " '' " EQU *" '' \ ;

OUTCR / => , "BRM CRLF" \ ;
OUTAB / => , "BRM TAB" \ ;
OUTSR [-] => , "BRM LIT; " STRING[*1] ;
OUTCH [-] => , "LDA =" *1:N "; CIO FNUMO; MIN CHNO" \ ;

ENDN / => "SSTOP DATA SS+SSTKSZ-5; $SS BSS SSTKSZ" \
   "MSP DATA MSTK; SMSPT DATA MSTK+MSTKSZ-5;$MSTK BSS MSTKSZ" \
   "NSP DATA NSTK; SNSPT DATA NSTK+NSTKSZ-5;$NSTK BSS NSTKSZ" \
   "KSP DATA KSTK; SKSPT DATA KSTK+KSTKSZ-5;$KSTK BSS KSTKSZ" \
   "WRK  BSS 1;XWRK BSS 1; END" \ ;

SAVG [-] => , "BRM SAVGN" \ *1 , "BRMRSTGN" \ ;

IMED [-] => , *1 \ ;

NITEM [-] => , "STX INDX; LDA KT" \
             *1 "CLB; LDX INDX; SKE 0,2; STB MFLAG" \ ;

FITEM [-] => , "FLGT " *1:S "FLG" \ ;

TTST [-] => , "BRM SSTEST;" STRING[*1] ;

CHTST [-] => , "CLB; LDA =" *1:N "; MRG CHRFLG; SKE 0,2; STB MFLAG" \ ;

GNITEM [-] => , "FLGT GENFLG; ETR= 77777B; STA GNLB" *1:S \ ;

GENARG [-] => , "LAB GNLB" *1:S "; MRG GENFLG" \ ;

NTST [-] => , "LDA NCCP; STA SNCCP" \ *1
            , "LDA =1; SKR MFLAG; BRU *+2; STA MFLAG; LDA SNCCP; STA NCCP" \ ;

NCHR [-] => , "LDA =" *1:N "; BRM TCH" \ ;

NSR [-] => , "BRM TST; " STRING[*1] ;

UP ["1",-] => , "LDA* KSP" \ *2
     [-,-] => , "LDX KSP; LDA 1-" *1:S ",2" \ *2 ;

LKT [-] => , "LDA KT" \ *1 ;

UPWRK / => , "MIN WRK; LDA WRK; SKG XWRK; LDA XWRK; STA XWRK" \ ;
DNWRK / => , "LDA =-1; ADM WRK" \ ;
OUTWRK [-] => *1 , "LDA WRK; BRM OUTN" \ ;
MAXWRK / => , "LDA XWRK; BRM OUTN" \ ;

SIZS [.CHR,-] => *1:C "STKSZ EQU " *2:S \ ;

KPOPK [-] => , "MIN MSP; LDA KT; STA* MSP; MIN MSP; LDA KSP; STA* MSP" *1 \
             , "LDX MSP; LDA 0,2; STA KSP; LDA -1,2; STA KT; LDA =-2; AIX MSP" \ ;

PAROUT [ZRO[]] => , "LDA KT" \
         ["0"] => , "LDA KT" \
           [-] => , "LDKA =" *1 \ ;

.END
